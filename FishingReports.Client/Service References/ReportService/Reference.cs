//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FishingReports.Client.ReportService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageEntity", Namespace="http://schemas.datacontract.org/2004/07/FishingReports.Model")]
    [System.SerializableAttribute()]
    public partial class ImageEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReportIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbNailNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageID {
            get {
                return this.ImageIDField;
            }
            set {
                if ((this.ImageIDField.Equals(value) != true)) {
                    this.ImageIDField = value;
                    this.RaisePropertyChanged("ImageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageName {
            get {
                return this.ImageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageNameField, value) != true)) {
                    this.ImageNameField = value;
                    this.RaisePropertyChanged("ImageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReportID {
            get {
                return this.ReportIDField;
            }
            set {
                if ((this.ReportIDField.Equals(value) != true)) {
                    this.ReportIDField = value;
                    this.RaisePropertyChanged("ReportID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbNailName {
            get {
                return this.ThumbNailNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbNailNameField, value) != true)) {
                    this.ThumbNailNameField = value;
                    this.RaisePropertyChanged("ThumbNailName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportFilter", Namespace="http://schemas.datacontract.org/2004/07/FishingReports.Model")]
    [System.SerializableAttribute()]
    public partial class ReportFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MonthFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MonthToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((this.ImagesField.Equals(value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MonthFrom {
            get {
                return this.MonthFromField;
            }
            set {
                if ((this.MonthFromField.Equals(value) != true)) {
                    this.MonthFromField = value;
                    this.RaisePropertyChanged("MonthFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MonthTo {
            get {
                return this.MonthToField;
            }
            set {
                if ((this.MonthToField.Equals(value) != true)) {
                    this.MonthToField = value;
                    this.RaisePropertyChanged("MonthTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportSearchResult", Namespace="http://schemas.datacontract.org/2004/07/FishingReportsServices")]
    [System.SerializableAttribute()]
    public partial class ReportSearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AverageFishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfReportsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FishingReports.Client.ReportService.ReportListItem[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalFishField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AverageFish {
            get {
                return this.AverageFishField;
            }
            set {
                if ((this.AverageFishField.Equals(value) != true)) {
                    this.AverageFishField = value;
                    this.RaisePropertyChanged("AverageFish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfReports {
            get {
                return this.NumberOfReportsField;
            }
            set {
                if ((this.NumberOfReportsField.Equals(value) != true)) {
                    this.NumberOfReportsField = value;
                    this.RaisePropertyChanged("NumberOfReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FishingReports.Client.ReportService.ReportListItem[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalFish {
            get {
                return this.TotalFishField;
            }
            set {
                if ((this.TotalFishField.Equals(value) != true)) {
                    this.TotalFishField = value;
                    this.RaisePropertyChanged("TotalFish");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportListItem", Namespace="http://schemas.datacontract.org/2004/07/FishingReportsServices")]
    [System.SerializableAttribute()]
    public partial class ReportListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> AccessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FlowRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReportDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FishingReports.Client.ReportService.ReportType ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalFishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WaterConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeatherConditionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Access {
            get {
                return this.AccessField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessField, value) != true)) {
                    this.AccessField = value;
                    this.RaisePropertyChanged("Access");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AccessId {
            get {
                return this.AccessIdField;
            }
            set {
                if ((this.AccessIdField.Equals(value) != true)) {
                    this.AccessIdField = value;
                    this.RaisePropertyChanged("AccessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FlowRate {
            get {
                return this.FlowRateField;
            }
            set {
                if ((this.FlowRateField.Equals(value) != true)) {
                    this.FlowRateField = value;
                    this.RaisePropertyChanged("FlowRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfImages {
            get {
                return this.NumberOfImagesField;
            }
            set {
                if ((this.NumberOfImagesField.Equals(value) != true)) {
                    this.NumberOfImagesField = value;
                    this.RaisePropertyChanged("NumberOfImages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReportDate {
            get {
                return this.ReportDateField;
            }
            set {
                if ((this.ReportDateField.Equals(value) != true)) {
                    this.ReportDateField = value;
                    this.RaisePropertyChanged("ReportDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportDescription {
            get {
                return this.ReportDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportDescriptionField, value) != true)) {
                    this.ReportDescriptionField = value;
                    this.RaisePropertyChanged("ReportDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportId {
            get {
                return this.ReportIdField;
            }
            set {
                if ((this.ReportIdField.Equals(value) != true)) {
                    this.ReportIdField = value;
                    this.RaisePropertyChanged("ReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FishingReports.Client.ReportService.ReportType ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((this.ReportTypeField.Equals(value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalFish {
            get {
                return this.TotalFishField;
            }
            set {
                if ((this.TotalFishField.Equals(value) != true)) {
                    this.TotalFishField = value;
                    this.RaisePropertyChanged("TotalFish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WaterConditions {
            get {
                return this.WaterConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.WaterConditionsField, value) != true)) {
                    this.WaterConditionsField = value;
                    this.RaisePropertyChanged("WaterConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeatherConditions {
            get {
                return this.WeatherConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.WeatherConditionsField, value) != true)) {
                    this.WeatherConditionsField = value;
                    this.RaisePropertyChanged("WeatherConditions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportType", Namespace="http://schemas.datacontract.org/2004/07/FishingReports.Model")]
    public enum ReportType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wade = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Float = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lake = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaltFlats = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportEntity", Namespace="http://schemas.datacontract.org/2004/07/FishingReports.Model")]
    [System.SerializableAttribute()]
    public partial class ReportEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> AccessIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FlowRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReportDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReportIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FishingReports.Client.ReportService.ReportType ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalFishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WaterConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeatherConditionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Access {
            get {
                return this.AccessField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessField, value) != true)) {
                    this.AccessField = value;
                    this.RaisePropertyChanged("Access");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AccessID {
            get {
                return this.AccessIDField;
            }
            set {
                if ((this.AccessIDField.Equals(value) != true)) {
                    this.AccessIDField = value;
                    this.RaisePropertyChanged("AccessID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FlowRate {
            get {
                return this.FlowRateField;
            }
            set {
                if ((this.FlowRateField.Equals(value) != true)) {
                    this.FlowRateField = value;
                    this.RaisePropertyChanged("FlowRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfImages {
            get {
                return this.NumberOfImagesField;
            }
            set {
                if ((this.NumberOfImagesField.Equals(value) != true)) {
                    this.NumberOfImagesField = value;
                    this.RaisePropertyChanged("NumberOfImages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReportDate {
            get {
                return this.ReportDateField;
            }
            set {
                if ((this.ReportDateField.Equals(value) != true)) {
                    this.ReportDateField = value;
                    this.RaisePropertyChanged("ReportDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportDescription {
            get {
                return this.ReportDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportDescriptionField, value) != true)) {
                    this.ReportDescriptionField = value;
                    this.RaisePropertyChanged("ReportDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportID {
            get {
                return this.ReportIDField;
            }
            set {
                if ((this.ReportIDField.Equals(value) != true)) {
                    this.ReportIDField = value;
                    this.RaisePropertyChanged("ReportID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FishingReports.Client.ReportService.ReportType ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((this.ReportTypeField.Equals(value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalFish {
            get {
                return this.TotalFishField;
            }
            set {
                if ((this.TotalFishField.Equals(value) != true)) {
                    this.TotalFishField = value;
                    this.RaisePropertyChanged("TotalFish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WaterConditions {
            get {
                return this.WaterConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.WaterConditionsField, value) != true)) {
                    this.WaterConditionsField = value;
                    this.RaisePropertyChanged("WaterConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeatherConditions {
            get {
                return this.WeatherConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.WeatherConditionsField, value) != true)) {
                    this.WeatherConditionsField = value;
                    this.RaisePropertyChanged("WeatherConditions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReportService.IReportDataService")]
    public interface IReportDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportDataService/GetImages", ReplyAction="http://tempuri.org/IReportDataService/GetImagesResponse")]
        FishingReports.Client.ReportService.ImageEntity[] GetImages(int reportID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportDataService/GetImagesByLocation", ReplyAction="http://tempuri.org/IReportDataService/GetImagesByLocationResponse")]
        FishingReports.Client.ReportService.ImageEntity[] GetImagesByLocation(System.Guid locationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportDataService/SynchronizeImagesForReport", ReplyAction="http://tempuri.org/IReportDataService/SynchronizeImagesForReportResponse")]
        void SynchronizeImagesForReport(int reportID, FishingReports.Client.ReportService.ImageEntity[] images);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportDataService/SaveNewImages", ReplyAction="http://tempuri.org/IReportDataService/SaveNewImagesResponse")]
        void SaveNewImages(FishingReports.Client.ReportService.ImageEntity[] images);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportDataService/DeleteImages", ReplyAction="http://tempuri.org/IReportDataService/DeleteImagesResponse")]
        void DeleteImages(FishingReports.Client.ReportService.ImageEntity[] images);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportDataService/GetReports", ReplyAction="http://tempuri.org/IReportDataService/GetReportsResponse")]
        FishingReports.Client.ReportService.ReportSearchResult GetReports(FishingReports.Client.ReportService.ReportFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportDataService/GetReport", ReplyAction="http://tempuri.org/IReportDataService/GetReportResponse")]
        FishingReports.Client.ReportService.ReportEntity GetReport(int reportID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportDataService/UpdateReport", ReplyAction="http://tempuri.org/IReportDataService/UpdateReportResponse")]
        void UpdateReport(FishingReports.Client.ReportService.ReportEntity report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportDataService/GetAllYears", ReplyAction="http://tempuri.org/IReportDataService/GetAllYearsResponse")]
        int[] GetAllYears();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportDataService/SaveReport", ReplyAction="http://tempuri.org/IReportDataService/SaveReportResponse")]
        int SaveReport(FishingReports.Client.ReportService.ReportEntity report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportDataService/ValidateNewReport", ReplyAction="http://tempuri.org/IReportDataService/ValidateNewReportResponse")]
        System.Collections.Generic.Dictionary<string, string> ValidateNewReport(FishingReports.Client.ReportService.ReportEntity entity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportDataServiceChannel : FishingReports.Client.ReportService.IReportDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportDataServiceClient : System.ServiceModel.ClientBase<FishingReports.Client.ReportService.IReportDataService>, FishingReports.Client.ReportService.IReportDataService {
        
        public ReportDataServiceClient() {
        }
        
        public ReportDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FishingReports.Client.ReportService.ImageEntity[] GetImages(int reportID) {
            return base.Channel.GetImages(reportID);
        }
        
        public FishingReports.Client.ReportService.ImageEntity[] GetImagesByLocation(System.Guid locationID) {
            return base.Channel.GetImagesByLocation(locationID);
        }
        
        public void SynchronizeImagesForReport(int reportID, FishingReports.Client.ReportService.ImageEntity[] images) {
            base.Channel.SynchronizeImagesForReport(reportID, images);
        }
        
        public void SaveNewImages(FishingReports.Client.ReportService.ImageEntity[] images) {
            base.Channel.SaveNewImages(images);
        }
        
        public void DeleteImages(FishingReports.Client.ReportService.ImageEntity[] images) {
            base.Channel.DeleteImages(images);
        }
        
        public FishingReports.Client.ReportService.ReportSearchResult GetReports(FishingReports.Client.ReportService.ReportFilter filter) {
            return base.Channel.GetReports(filter);
        }
        
        public FishingReports.Client.ReportService.ReportEntity GetReport(int reportID) {
            return base.Channel.GetReport(reportID);
        }
        
        public void UpdateReport(FishingReports.Client.ReportService.ReportEntity report) {
            base.Channel.UpdateReport(report);
        }
        
        public int[] GetAllYears() {
            return base.Channel.GetAllYears();
        }
        
        public int SaveReport(FishingReports.Client.ReportService.ReportEntity report) {
            return base.Channel.SaveReport(report);
        }
        
        public System.Collections.Generic.Dictionary<string, string> ValidateNewReport(FishingReports.Client.ReportService.ReportEntity entity) {
            return base.Channel.ValidateNewReport(entity);
        }
    }
}

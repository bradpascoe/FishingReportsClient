//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FishingReports.Client.LocationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessEntity", Namespace="http://schemas.datacontract.org/2004/07/FishingReports.Model")]
    [System.SerializableAttribute()]
    public partial class AccessEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AccessIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LocationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Access {
            get {
                return this.AccessField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessField, value) != true)) {
                    this.AccessField = value;
                    this.RaisePropertyChanged("Access");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AccessID {
            get {
                return this.AccessIDField;
            }
            set {
                if ((this.AccessIDField.Equals(value) != true)) {
                    this.AccessIDField = value;
                    this.RaisePropertyChanged("AccessID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LocationID {
            get {
                return this.LocationIDField;
            }
            set {
                if ((this.LocationIDField.Equals(value) != true)) {
                    this.LocationIDField = value;
                    this.RaisePropertyChanged("LocationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationEntity", Namespace="http://schemas.datacontract.org/2004/07/FishingReports.Model")]
    [System.SerializableAttribute()]
    public partial class LocationEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StateIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LocationID {
            get {
                return this.LocationIDField;
            }
            set {
                if ((this.LocationIDField.Equals(value) != true)) {
                    this.LocationIDField = value;
                    this.RaisePropertyChanged("LocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateEntity", Namespace="http://schemas.datacontract.org/2004/07/FishingReports.Model")]
    [System.SerializableAttribute()]
    public partial class StateEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StateIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LocationService.ILocationDataService")]
    public interface ILocationDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationDataService/GetAccesses", ReplyAction="http://tempuri.org/ILocationDataService/GetAccessesResponse")]
        FishingReports.Client.LocationService.AccessEntity[] GetAccesses(System.Guid locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationDataService/GetAllLocations", ReplyAction="http://tempuri.org/ILocationDataService/GetAllLocationsResponse")]
        FishingReports.Client.LocationService.LocationEntity[] GetAllLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationDataService/GetLocations", ReplyAction="http://tempuri.org/ILocationDataService/GetLocationsResponse")]
        FishingReports.Client.LocationService.LocationEntity[] GetLocations(System.Guid stateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationDataService/GetStates", ReplyAction="http://tempuri.org/ILocationDataService/GetStatesResponse")]
        FishingReports.Client.LocationService.StateEntity[] GetStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationDataService/SaveAccess", ReplyAction="http://tempuri.org/ILocationDataService/SaveAccessResponse")]
        void SaveAccess(System.Guid locationId, string newAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationDataService/SaveLocation", ReplyAction="http://tempuri.org/ILocationDataService/SaveLocationResponse")]
        void SaveLocation(System.Guid stateId, string newLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationDataService/SaveState", ReplyAction="http://tempuri.org/ILocationDataService/SaveStateResponse")]
        void SaveState(string newState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationDataService/ValidateNewAccess", ReplyAction="http://tempuri.org/ILocationDataService/ValidateNewAccessResponse")]
        System.Collections.Generic.Dictionary<string, string> ValidateNewAccess(FishingReports.Client.LocationService.AccessEntity access);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationDataService/ValidateNewLocation", ReplyAction="http://tempuri.org/ILocationDataService/ValidateNewLocationResponse")]
        System.Collections.Generic.Dictionary<string, string> ValidateNewLocation(FishingReports.Client.LocationService.LocationEntity location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationDataService/ValidateNewState", ReplyAction="http://tempuri.org/ILocationDataService/ValidateNewStateResponse")]
        System.Collections.Generic.Dictionary<string, string> ValidateNewState(FishingReports.Client.LocationService.StateEntity state);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocationDataServiceChannel : FishingReports.Client.LocationService.ILocationDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocationDataServiceClient : System.ServiceModel.ClientBase<FishingReports.Client.LocationService.ILocationDataService>, FishingReports.Client.LocationService.ILocationDataService {
        
        public LocationDataServiceClient() {
        }
        
        public LocationDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocationDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FishingReports.Client.LocationService.AccessEntity[] GetAccesses(System.Guid locationId) {
            return base.Channel.GetAccesses(locationId);
        }
        
        public FishingReports.Client.LocationService.LocationEntity[] GetAllLocations() {
            return base.Channel.GetAllLocations();
        }
        
        public FishingReports.Client.LocationService.LocationEntity[] GetLocations(System.Guid stateId) {
            return base.Channel.GetLocations(stateId);
        }
        
        public FishingReports.Client.LocationService.StateEntity[] GetStates() {
            return base.Channel.GetStates();
        }
        
        public void SaveAccess(System.Guid locationId, string newAccess) {
            base.Channel.SaveAccess(locationId, newAccess);
        }
        
        public void SaveLocation(System.Guid stateId, string newLocation) {
            base.Channel.SaveLocation(stateId, newLocation);
        }
        
        public void SaveState(string newState) {
            base.Channel.SaveState(newState);
        }
        
        public System.Collections.Generic.Dictionary<string, string> ValidateNewAccess(FishingReports.Client.LocationService.AccessEntity access) {
            return base.Channel.ValidateNewAccess(access);
        }
        
        public System.Collections.Generic.Dictionary<string, string> ValidateNewLocation(FishingReports.Client.LocationService.LocationEntity location) {
            return base.Channel.ValidateNewLocation(location);
        }
        
        public System.Collections.Generic.Dictionary<string, string> ValidateNewState(FishingReports.Client.LocationService.StateEntity state) {
            return base.Channel.ValidateNewState(state);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FishingReports.Client.LoginService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserEntity", Namespace="http://schemas.datacontract.org/2004/07/FishingReports.Model")]
    [System.SerializableAttribute()]
    public partial class UserEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Password2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password2 {
            get {
                return this.Password2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Password2Field, value) != true)) {
                    this.Password2Field = value;
                    this.RaisePropertyChanged("Password2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Residence {
            get {
                return this.ResidenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ResidenceField, value) != true)) {
                    this.ResidenceField = value;
                    this.RaisePropertyChanged("Residence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoginService.ILoginService")]
    public interface ILoginService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AttemptLogin", ReplyAction="http://tempuri.org/ILoginService/AttemptLoginResponse")]
        bool AttemptLogin(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/DoesUserExist", ReplyAction="http://tempuri.org/ILoginService/DoesUserExistResponse")]
        bool DoesUserExist(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/InsertUser", ReplyAction="http://tempuri.org/ILoginService/InsertUserResponse")]
        void InsertUser(FishingReports.Client.LoginService.UserEntity user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetUser", ReplyAction="http://tempuri.org/ILoginService/GetUserResponse")]
        FishingReports.Client.LoginService.UserEntity GetUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetNumberOfPosts", ReplyAction="http://tempuri.org/ILoginService/GetNumberOfPostsResponse")]
        int GetNumberOfPosts(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ValidateNewUser", ReplyAction="http://tempuri.org/ILoginService/ValidateNewUserResponse")]
        System.Collections.Generic.Dictionary<string, string> ValidateNewUser(FishingReports.Client.LoginService.UserEntity user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServiceChannel : FishingReports.Client.LoginService.ILoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<FishingReports.Client.LoginService.ILoginService>, FishingReports.Client.LoginService.ILoginService {
        
        public LoginServiceClient() {
        }
        
        public LoginServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AttemptLogin(string username, string password) {
            return base.Channel.AttemptLogin(username, password);
        }
        
        public bool DoesUserExist(string username) {
            return base.Channel.DoesUserExist(username);
        }
        
        public void InsertUser(FishingReports.Client.LoginService.UserEntity user) {
            base.Channel.InsertUser(user);
        }
        
        public FishingReports.Client.LoginService.UserEntity GetUser(string username) {
            return base.Channel.GetUser(username);
        }
        
        public int GetNumberOfPosts(string username) {
            return base.Channel.GetNumberOfPosts(username);
        }
        
        public System.Collections.Generic.Dictionary<string, string> ValidateNewUser(FishingReports.Client.LoginService.UserEntity user) {
            return base.Channel.ValidateNewUser(user);
        }
    }
}
